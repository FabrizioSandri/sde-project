version: "3.8"
services:

  # UI
  ui:
    build: ./ui
    restart: always
    environment:
      - UI_PORT
    ports:
      - ${UI_PORT}:${UI_PORT}
    expose:
      - ${UI_PORT}
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT

  # Process centric
  authentication:
    build: ./process_centric/authentication
    restart: always
    environment:
      - LOGIN_SERVICE_PORT
      - REGISTRATION_SERVICE_PORT
      - EXPRESS_SESSION_SECRET
      - GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET
      - GOOGLE_CALLBACK_URL
      - JWT_SECRET
      - AUTHENTICATION_SERVER_PORT
    ports:
      - ${AUTHENTICATION_SERVER_PORT}:${AUTHENTICATION_SERVER_PORT}
    expose:
      - ${AUTHENTICATION_SERVER_PORT}
    depends_on:
      - login
      - registration

  football_matches:
    build: ./process_centric/football_matches
    restart: always
    environment:
      - FOOTBALL_SERVICE_PORT
      - DB_ADAPTER_SERVER_PORT
      - FOOTBALLMATCHES_SERVER_PORT
      - PLACEFORECAST_SERVICE_PORT
    ports:
      - ${FOOTBALLMATCHES_SERVER_PORT}:${FOOTBALLMATCHES_SERVER_PORT}
    expose:
      - ${FOOTBALLMATCHES_SERVER_PORT}
    depends_on:
      - db_adapter
      - football
      - place_forecast

  football_news:
    build: ./process_centric/football_news
    restart: always
    environment:
      - FOOTBALL_NEWS_SERVER_PORT
      - NEWS_AGGREGATOR_SERVICE_PORT
      - ARTICLE_EXTRACTOR_SERVICE_PORT
      - TEXT_SIMILARITIES_SERVER_PORT
      - DB_ADAPTER_SERVER_PORT
    ports:
      - ${FOOTBALL_NEWS_SERVER_PORT}:${FOOTBALL_NEWS_SERVER_PORT}
    expose:
      - ${FOOTBALL_NEWS_SERVER_PORT}
    depends_on:
      - news_aggregator
      - article_extractor
      - text_similarities
      - authentication

  # Business logic
  login:
    build: ./business_logic/login
    restart: always
    environment:
      - DB_ADAPTER_SERVER_PORT
      - JWT_SECRET
      - LOGIN_SERVICE_PORT
    ports:
      - ${LOGIN_SERVICE_PORT}:${LOGIN_SERVICE_PORT}
    expose:
      - ${LOGIN_SERVICE_PORT}
    depends_on:
      - db_adapter

  registration:
    build: ./business_logic/registration
    restart: always
    environment:
      - EVA_ADAPTER_SERVER_PORT
      - DB_ADAPTER_SERVER_PORT
      - REGISTRATION_SERVICE_PORT
    ports:
      - ${REGISTRATION_SERVICE_PORT}:${REGISTRATION_SERVICE_PORT}
    expose:
      - ${REGISTRATION_SERVICE_PORT}
    depends_on:
      - db_adapter
      - eva_adapter

  news_aggregator:
    build: ./business_logic/news_aggregator
    restart: always
    environment:
      - NEWS_AGGREGATOR_SERVICE_PORT
      - RSS_ADAPTER_SERVER_PORT
    ports:
      - ${NEWS_AGGREGATOR_SERVICE_PORT}:${NEWS_AGGREGATOR_SERVICE_PORT}
    expose:
      - ${NEWS_AGGREGATOR_SERVICE_PORT}
    depends_on:
      - rss_adapter
  
  article_extractor:
    build: ./business_logic/article_extractor
    restart: always
    environment:
      - ARTICLE_EXTRACTOR_SERVICE_PORT
      - HTML_ADAPTER_SERVER_PORT
    ports:
      - ${ARTICLE_EXTRACTOR_SERVICE_PORT}:${ARTICLE_EXTRACTOR_SERVICE_PORT}
    expose:
      - ${ARTICLE_EXTRACTOR_SERVICE_PORT}
    depends_on:
      - html_adapter

  football:
    build: ./business_logic/football
    restart: always
    environment:
      - FOOTBALL_ADAPTER_SERVER_PORT
      - FOOTBALL_SERVICE_PORT
    ports:
      - ${FOOTBALL_SERVICE_PORT}:${FOOTBALL_SERVICE_PORT}
    expose:
      - ${FOOTBALL_SERVICE_PORT}
    depends_on:
      - football_adapter

  place_forecast:
    build: ./business_logic/place_forecast
    restart: always
    environment:
      - WEATHER_ADAPTER_SERVER_PORT
      - POSITIONSTACK_ADAPTER_SERVER_PORT
      - PLACEFORECAST_SERVICE_PORT
    ports:
      - ${PLACEFORECAST_SERVICE_PORT}:${PLACEFORECAST_SERVICE_PORT}
    expose:
      - ${PLACEFORECAST_SERVICE_PORT}
    depends_on:
      - weather_adapter
      - positionstack_adapter


  # Adapter Layer
  eva_adapter:
    build: ./adapter/eva_api
    restart: always
    environment:
      - EVA_ADAPTER_SERVER_PORT
    ports:
      - ${EVA_ADAPTER_SERVER_PORT}:${EVA_ADAPTER_SERVER_PORT}
    expose:
      - ${EVA_ADAPTER_SERVER_PORT}

  db_adapter:
    build: ./adapter/database_interface
    restart: always
    environment:
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - DB_PORT
      - DB_ADAPTER_SERVER_PORT
      - AUTHENTICATION_SERVER_PORT
    ports:
      - ${DB_ADAPTER_SERVER_PORT}:${DB_ADAPTER_SERVER_PORT}
    expose:
      - ${DB_ADAPTER_SERVER_PORT}
    depends_on:
      - database

  rss_adapter:
    build: ./adapter/rss_feed
    restart: always
    environment:
      - RSS_ADAPTER_SERVER_PORT
    ports:
      - ${RSS_ADAPTER_SERVER_PORT}:${RSS_ADAPTER_SERVER_PORT}
    expose:
      - ${RSS_ADAPTER_SERVER_PORT}
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT

  html_adapter:
    build: ./adapter/html_adapter
    restart: always
    environment:
      - HTML_ADAPTER_SERVER_PORT
    ports:
      - ${HTML_ADAPTER_SERVER_PORT}:${HTML_ADAPTER_SERVER_PORT}
    expose:
      - ${HTML_ADAPTER_SERVER_PORT}
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT

  weather_adapter:
    build: ./adapter/weather_api
    restart: always
    environment: 
      - WEATHER_ADAPTER_SERVER_PORT
      - X_RAPIDAPI_KEY
    ports:
      - ${WEATHER_ADAPTER_SERVER_PORT}:${WEATHER_ADAPTER_SERVER_PORT}
    expose:
      - ${WEATHER_ADAPTER_SERVER_PORT}

  positionstack_adapter:
    build: ./adapter/positionstack_api
    restart: always
    environment: 
      - POSITIONSTACK_ADAPTER_SERVER_PORT
      - STACKPOSITION_ACCESSKEY
    ports:
      - ${POSITIONSTACK_ADAPTER_SERVER_PORT}:${POSITIONSTACK_ADAPTER_SERVER_PORT}
    expose:
      - ${POSITIONSTACK_ADAPTER_SERVER_PORT}

  football_adapter:
    build: ./adapter/football_api
    restart: always
    environment: 
      - FOOTBALL_ADAPTER_SERVER_PORT
      - X_RAPIDAPI_KEY
    ports:
      - ${FOOTBALL_ADAPTER_SERVER_PORT}:${FOOTBALL_ADAPTER_SERVER_PORT}
    expose:
      - ${FOOTBALL_ADAPTER_SERVER_PORT}

  # Data layer
  text_similarities:
    build: ./adapter/text_similarities
    restart: always
    environment: 
      - TEXT_SIMILARITIES_SERVER_PORT
    ports:
      - ${TEXT_SIMILARITIES_SERVER_PORT}:${TEXT_SIMILARITIES_SERVER_PORT}
    expose:
      - ${TEXT_SIMILARITIES_SERVER_PORT}

  database:
    image: mysql
    restart: always
    environment:
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_ROOT_PASSWORD
    expose:
      - ${DB_PORT}
    volumes:
      - ./adapter/database_interface/mysql-dump/users.sql:/docker-entrypoint-initdb.d/users.sql
      - persistent-db:/var/lib/mysql

volumes:
  persistent-db: